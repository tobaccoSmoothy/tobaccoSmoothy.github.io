{"mappings":"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","sources":["js/threex.keyboardstate.js"],"sourcesContent":["// THREEx.KeyboardState.js keep the current state of the keyboard.\n// It is possible to query it at any time. No need of an event.\n// This is particularly convenient in loop driven case, like in\n// 3D demos or games.\n//\n// # Usage\n//\n// **Step 1**: Create the object\n//\n// ```var keyboard\t= new THREEx.KeyboardState();```\n//\n// **Step 2**: Query the keyboard state\n//\n// This will return true if shift and A are pressed, false otherwise\n//\n// ```keyboard.pressed(\"shift+A\")```\n//\n// **Step 3**: Stop listening to the keyboard\n//\n// ```keyboard.destroy()```\n//\n// NOTE: this library may be nice as standaline. independant from three.js\n// - rename it keyboardForGame\n//\n// # Code\n//\n\n/** @namespace */\nvar THREEx\t= THREEx \t\t|| {};\n\n/**\n * - NOTE: it would be quite easy to push event-driven too\n *   - microevent.js for events handling\n *   - in this._onkeyChange, generate a string from the DOM event\n *   - use this as event name\n*/\nTHREEx.KeyboardState\t= function(domElement)\n{\n\tthis.domElement= domElement\t|| document;\n\t// to store the current state\n\tthis.keyCodes\t= {};\n\tthis.modifiers\t= {};\n\t\n\t// create callback to bind/unbind keyboard events\n\tvar _this\t= this;\n\tthis._onKeyDown\t= function(event){ _this._onKeyChange(event)\t}\n\tthis._onKeyUp\t= function(event){ _this._onKeyChange(event)\t}\n\n\t// bind keyEvents\n\tthis.domElement.addEventListener(\"keydown\", this._onKeyDown, false);\n\tthis.domElement.addEventListener(\"keyup\", this._onKeyUp, false);\n\n\t// create callback to bind/unbind window blur event\n\tthis._onBlur = function(){\n\t\tfor(var prop in _this.keyCodes)  _this.keyCodes[prop] = false;\n\t\tfor(var prop in _this.modifiers)  _this.modifiers[prop] = false;\n\t}\n\n\t// bind window blur\n\twindow.addEventListener(\"blur\", this._onBlur, false);\n}\n\n/**\n * To stop listening of the keyboard events\n*/\nTHREEx.KeyboardState.prototype.destroy\t= function()\n{\n\t// unbind keyEvents\n\tthis.domElement.removeEventListener(\"keydown\", this._onKeyDown, false);\n\tthis.domElement.removeEventListener(\"keyup\", this._onKeyUp, false);\n\n\t// unbind window blur event\n\twindow.removeEventListener(\"blur\", this._onBlur, false);\n}\n\nTHREEx.KeyboardState.MODIFIERS\t= ['shift', 'ctrl', 'alt', 'meta'];\nTHREEx.KeyboardState.ALIAS\t= {\n\t'left'\t\t: 37,\n\t'up'\t\t: 38,\n\t'right'\t\t: 39,\n\t'down'\t\t: 40,\n\t'space'\t\t: 32,\n\t'pageup'\t: 33,\n\t'pagedown'\t: 34,\n\t'tab'\t\t: 9,\n\t'escape'\t: 27\n};\n\n/**\n * to process the keyboard dom event\n*/\nTHREEx.KeyboardState.prototype._onKeyChange\t= function(event)\n{\n\t// log to debug\n\t//console.log(\"onKeyChange\", event, event.keyCode, event.shiftKey, event.ctrlKey, event.altKey, event.metaKey)\n\n\t// update this.keyCodes\n\tvar keyCode\t\t= event.keyCode\n\tvar pressed\t\t= event.type === 'keydown' ? true : false\n\tthis.keyCodes[keyCode]\t= pressed\n\t// update this.modifiers\n\tthis.modifiers['shift']\t= event.shiftKey\n\tthis.modifiers['ctrl']\t= event.ctrlKey\n\tthis.modifiers['alt']\t= event.altKey\n\tthis.modifiers['meta']\t= event.metaKey\n}\n\n/**\n * query keyboard state to know if a key is pressed of not\n *\n * @param {String} keyDesc the description of the key. format : modifiers+key e.g shift+A\n * @returns {Boolean} true if the key is pressed, false otherwise\n*/\nTHREEx.KeyboardState.prototype.pressed\t= function(keyDesc){\n\tvar keys\t= keyDesc.split(\"+\");\n\tfor(var i = 0; i < keys.length; i++){\n\t\tvar key\t\t= keys[i]\n\t\tvar pressed\t= false\n\t\tif( THREEx.KeyboardState.MODIFIERS.indexOf( key ) !== -1 ){\n\t\t\tpressed\t= this.modifiers[key];\n\t\t}else if( Object.keys(THREEx.KeyboardState.ALIAS).indexOf( key ) != -1 ){\n\t\t\tpressed\t= this.keyCodes[ THREEx.KeyboardState.ALIAS[key] ];\n\t\t}else {\n\t\t\tpressed\t= this.keyCodes[key.toUpperCase().charCodeAt(0)]\n\t\t}\n\t\tif( !pressed)\treturn false;\n\t};\n\treturn true;\n}\n\n/**\n * return true if an event match a keyDesc\n * @param  {KeyboardEvent} event   keyboard event\n * @param  {String} keyDesc string description of the key\n * @return {Boolean}         true if the event match keyDesc, false otherwise\n */\nTHREEx.KeyboardState.prototype.eventMatches = function(event, keyDesc) {\n\tvar aliases\t= THREEx.KeyboardState.ALIAS\n\tvar aliasKeys\t= Object.keys(aliases)\n\tvar keys\t= keyDesc.split(\"+\")\n\t// log to debug\n\t// console.log(\"eventMatches\", event, event.keyCode, event.shiftKey, event.ctrlKey, event.altKey, event.metaKey)\n\tfor(var i = 0; i < keys.length; i++){\n\t\tvar key\t\t= keys[i];\n\t\tvar pressed\t= false;\n\t\tif( key === 'shift' ){\n\t\t\tpressed\t= (event.shiftKey\t? true : false)\n\t\t}else if( key === 'ctrl' ){\n\t\t\tpressed\t= (event.ctrlKey\t? true : false)\n\t\t}else if( key === 'alt' ){\n\t\t\tpressed\t= (event.altKey\t\t? true : false)\n\t\t}else if( key === 'meta' ){\n\t\t\tpressed\t= (event.metaKey\t? true : false)\n\t\t}else if( aliasKeys.indexOf( key ) !== -1 ){\n\t\t\tpressed\t= (event.keyCode === aliases[key] ? true : false);\n\t\t}else if( event.keyCode === key.toUpperCase().charCodeAt(0) ){\n\t\t\tpressed\t= true;\n\t\t}\n\t\tif( !pressed )\treturn false;\n\t}\n\treturn true;\n}\n\n\n"],"names":[],"version":3,"file":"index.96c37def.js.map","sourceRoot":"/__parcel_source_root/"}